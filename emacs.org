#+STARTUP: showall

* Writing GNU Emacs Extensions

** Chap. 1

M-x apropos

** Chap. 2

Functions: other-window, move-to-window-line, file-smylink-p, message, remove-hook,
find-alternate-file, delete-file, write-file, read-buffer

Variables: buffer-file-name, prefix-numeric-value, current-prefix-arg

Hooks: post-command-hook, write-files-hooks, find-file-hooks, 

Advices: defadvice
Example: (defadvice switch-to-buffer (before name activate compile) ...)


** Chap. 3

Functions: defvar, set-window-start

Variables: last-command

Symbol properties: (put 'symbolname 'propertyname value), (get 'symbolname 'propertyname)

Markers: Like saved points but updated when the buffer is modified. set-marker


** Chap. 4

User options: (defvar varname value "* \\[command] docstring blabla")

Functions: (interactive "*") checks buffer is not read-only, save-excursion, save-restriction (narrowing),
save-match-data (search data), insert, match-beginning, replace-match, re-search-forward, regex-quote (escape a string),
make-local-hook, make-local-variable (if there is a global value for the other buffers), make-variable-buffer-local (separate
buffer-local in every buffer)

Regex: \< \> (beginning / end of world only), \bgnu\b (\b beginning or end of world), \= (empty string at current point)

Hooks: after-change-functions, local-write-file-hooks, 

** Chap. 10

set-buffer is effective only in the current function
call-process, start-process (async), process-status
display-buffer, erase-buffer
get-buffer-create, generate-new-buffer,
condition-case

* Various Notes

** Interactive functions and commands

C-h r read manual

M-x dired-do-query-replace-regexp 
M-z CHAR zap-to-char
C-S-backspace kill entire line
C-x C-o delete-blank-lines
C-x C-<SPC> pop-to-mark
M-h mark-paragraph

highlight-regexp
unhighlight-regexp
delete-railing-whitespace 

local var: show-trailing-whitespace

C-x C-t transpose two lines
M-c capitalize word

`M-x goto-address-mode'
     Activate URLs and e-mail addresses in the current buffer.

*** Server

Run Emacs as a "daemon", using the `--daemon' command-line option.

*** Files
`M-x file-cache-add-directory <RET> DIRECTORY <RET>'

`M-x tags-search <RET> REGEXP <RET>'
     Search for REGEXP through the files in the selected tags table.

`M-x tags-query-replace <RET> REGEXP <RET> REPLACEMENT <RET>'
     Perform a `query-replace-regexp' on each file in the selected tags
     table.

`M-,'
     Restart one of the commands above, from the current location of
     point (`tags-loop-continue').

**** Fileset
[[info:emacs#Filesets]]

*** Keyboard Macros

`C-x C-k n' give macro a nam
`C-x C-k b' bind to key
`C-x C-k C-e'
     Edit the last defined keyboard macro (`kmacro-edit-macro').
`C-x C-k l'
     Edit the last 300 keystrokes as a keyboard macro

[[info:emacs#Keyboard%20Macro%20Step-Edit][info:emacs#Keyboard Macro Step-Edit]]

*** Registers

`C-x r <SPC> R' save into register
`C-x r j R' jump
`C-x r s R' copy region into register
`C-x r i R' insert text
`C-u NUMBER C-x r n R' Store NUMBER into register R (`number-to-register').
`C-u NUMBER C-x r + R' Increment the number in register R by NUMBER
`C-x r i R' Insert the number from register R into the buffer.
(set-register ?z '(file . "/gd/gnu/emacs/19.0/src/ChangeLog"))

** Functions
file-exists-p, 
(mapconcat FUNCTION SEQUENCE SEPARATOR), ex. (mapconcat 'identity seq ".") 
locate-dominating-file
goto-char
current-word
bounds-of-thing-at-point
expand-file-name

** Variables
 debug-on-error

** Mode
dired Mode: C-x C-q, editable dired mode!

** Overlay

(let ((mirror (make-overlay (point) (+ 40 (point)) nil nil t)))
   (setq mm/mirrors (cons mirror mm/mirrors))
   (overlay-put mirror 'priority 100)
   (overlay-put mirror 'face 'mm/mirror-face))


* Resources
http://xahlee.org/emacs/elisp_common_functions.html
http://xahlee.org/emacs/elisp_idioms.html
http://xahlee.org/emacs/elisp_idioms_batch.html
http://www.emacswiki.org/emacs/ElispCookbook
http://steve-yegge.blogspot.com/2008/01/emergency-elisp.html

* Ideas

** DONE Automatically remove first lines of *igrep*
** DONE Automatically close compile buffer after few seconds if no error
** Automatically format sexp region when typing?

** TODO nxml + html5

