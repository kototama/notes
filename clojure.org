* SLIME Commands
Commonly-used SLIME commands:

M-.: Jump to the definition of a var
M-TAB or C-c TAB: Autocomplete symbol at point
C-x C-e: Eval the form under the point
C-c C-k: Compile the current buffer
C-c C-l: Load current buffer and force required namespaces to reload
C-M-x: Compile the whole top-level form under the point.
C-c S-i: Inspect a value
C-c C-m: Macroexpand the call under the point
C-c C-d C-d: Look up documentation for a var
C-c C-z: Switch from a Clojure buffer to the repl buffer
C-c M-p: Switch the repl namespace to match the current buffer
C-c C-w c: List all callers of a given function

* Utils

(defn ns-clean
       "Remove all internal mappings from a given name space or the current one if no parameter given."
   ([] (ns-clean *ns*)) 
   ([ns] (map #(ns-unmap ns %) (keys (ns-interns ns)))))

* Remote Debugging
swank-clojure 1.4.2 as dependency
(swank.swank/start-server :host "0.0.0.0" :port n),
http://corfield.org/blog/post.cfm/remote-debugging

* General
http://stackoverflow.com/questions/9229434/maps-and-records-equality-in-clojure

functions: alter-var-root

* Contrib to new Clojure transition
http://dev.clojure.org/display/doc/Clojure+Contrib

* Website

http://www.collaj.net

* Parsing Clojure code

http://clojure.org/reader
https://github.com/clojure/clojure/blob/master/src/jvm/clojure/lang/LispReader.java
Semantic Manual:

http://www.randomsample.de/cedetdocs/semantic/semantic/
